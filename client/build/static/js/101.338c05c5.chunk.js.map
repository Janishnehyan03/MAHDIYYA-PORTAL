{"version":3,"file":"static/js/101.338c05c5.chunk.js","mappings":"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","sources":["pages/Downloads.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport Axios from \"../Axios\";\r\nimport { UserAuthContext } from \"../context/userContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faUpload, faDownload, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// A simple component to show the file name in the form\r\nconst FileInputDisplay = ({ file }) => {\r\n  if (!file) {\r\n    return <p className=\"text-sm text-gray-500\">No file selected.</p>;\r\n  }\r\n  return <p className=\"text-sm text-gray-700 font-medium truncate\">{file.name}</p>;\r\n};\r\n\r\nfunction Downloads() {\r\n  const { authData } = useContext(UserAuthContext);\r\n\r\n  // Form state\r\n  const [file, setFile] = useState(null);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n\r\n  // Component state\r\n  const [downloads, setDownloads] = useState([]);\r\n  const [isLoadingList, setIsLoadingList] = useState(true);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [deletingId, setDeletingId] = useState(null);\r\n\r\n  const getDownloads = useCallback(async () => {\r\n    setIsLoadingList(true);\r\n    try {\r\n      const { data } = await Axios.get(\"/downloads\");\r\n      setDownloads(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch downloads:\", error);\r\n      toast.error(\"Could not fetch downloads list.\");\r\n    } finally {\r\n      setIsLoadingList(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getDownloads();\r\n  }, [getDownloads]);\r\n\r\n  const resetForm = () => {\r\n    setTitle(\"\");\r\n    setType(\"\");\r\n    setFile(null);\r\n    // Also reset the file input visually\r\n    if (document.getElementById(\"formFile\")) {\r\n      document.getElementById(\"formFile\").value = \"\";\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!title || !type || !file) {\r\n      toast.warn(\"Please fill all fields and select a file.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"type\", type);\r\n\r\n    try {\r\n      await Axios.post(\"/downloads\", formData);\r\n      toast.success(\"File uploaded successfully!\");\r\n      resetForm();\r\n      await getDownloads(); // Refresh the list without a page reload\r\n    } catch (error) {\r\n      console.error(\"File upload error:\", error.response);\r\n      toast.error(error.response?.data?.message || \"An error occurred during upload.\");\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n  \r\n  const handleDeleteFile = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this file? This action cannot be undone.\")) {\r\n      setDeletingId(id);\r\n      try {\r\n        // Optimistic UI: Remove from list immediately\r\n        setDownloads((prevDownloads) => prevDownloads.filter((d) => d._id !== id));\r\n        await Axios.delete(`/downloads/${id}`);\r\n        toast.success(\"File deleted successfully.\");\r\n        // Optional: uncomment the line below to re-sync with server after deletion, though optimistic UI is often enough.\r\n        // await getDownloads(); \r\n      } catch (error) {\r\n        toast.error(\"Failed to delete file. Please refresh and try again.\");\r\n        console.error(\"Delete error:\", error.response);\r\n        // If deletion fails, refresh the list to restore the item\r\n        await getDownloads();\r\n      } finally {\r\n        setDeletingId(null);\r\n      }\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-4 sm:p-6 lg:p-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <h1 className=\"text-3xl font-bold text-gray-800 mb-8 text-center\">\r\n          Manage Downloads\r\n        </h1>\r\n\r\n        {authData?.role === \"superAdmin\" && (\r\n          <div className=\"bg-white p-6 rounded-xl shadow-md mb-10 max-w-2xl mx-auto\">\r\n            <h2 className=\"text-xl font-semibold text-gray-700 mb-4 border-b pb-3\">Upload a New File</h2>\r\n            <form onSubmit={handleFileUpload} className=\"space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"type\" className=\"block text-sm font-medium text-gray-700\">File Type</label>\r\n                <select\r\n                  id=\"type\"\r\n                  value={type}\r\n                  onChange={(e) => setType(e.target.value)}\r\n                  className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                >\r\n                  <option value=\"\" disabled>Choose a category</option>\r\n                  <option value=\"student\">For Students</option>\r\n                  <option value=\"admin\">For Admins</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"file-title\" className=\"block text-sm font-medium text-gray-700\">File Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"file-title\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  placeholder=\"e.g., Annual Report 2023\"\r\n                  className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"formFile\" className=\"block text-sm font-medium text-gray-700\">Select File</label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"formFile\"\r\n                  onChange={(e) => setFile(e.target.files[0])}\r\n                  className=\"mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\r\n                />\r\n                 <div className=\"mt-2\">\r\n                  <FileInputDisplay file={file} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"pt-2\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isUploading}\r\n                  className=\"w-full inline-flex justify-center items-center gap-2 py-2.5 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-blue-400 disabled:cursor-not-allowed\"\r\n                >\r\n                  <FontAwesomeIcon icon={isUploading ? faSpinner : faUpload} spin={isUploading} />\r\n                  {isUploading ? \"Uploading...\" : \"Upload File\"}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {/* Downloads List Section */}\r\n        <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Available Files</h2>\r\n            {isLoadingList ? (\r\n                <div className=\"text-center p-10\">\r\n                    <FontAwesomeIcon icon={faSpinner} spin size=\"2x\" className=\"text-blue-500\" />\r\n                    <p className=\"mt-2 text-gray-600\">Loading Files...</p>\r\n                </div>\r\n            ) : downloads.length > 0 ? (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                    {downloads.map((download) => (\r\n                    <div\r\n                        key={download._id}\r\n                        className=\"bg-white rounded-lg border border-gray-200 shadow-sm p-5 flex flex-col justify-between hover:shadow-lg transition-shadow\"\r\n                    >\r\n                        <div>\r\n                        <div className=\"flex items-center justify-between mb-3\">\r\n                            <span className=\"px-2.5 py-1 text-xs font-medium text-blue-800 bg-blue-100 rounded-full capitalize\">\r\n                            {download.type}\r\n                            </span>\r\n                            {authData?.role === \"superAdmin\" && (\r\n                            <button\r\n                                onClick={() => handleDeleteFile(download._id)}\r\n                                disabled={deletingId === download._id}\r\n                                className=\"text-gray-400 hover:text-red-600 disabled:cursor-not-allowed p-1\"\r\n                                aria-label=\"Delete file\"\r\n                            >\r\n                                <FontAwesomeIcon icon={deletingId === download._id ? faSpinner : faTrash} spin={deletingId === download._id} />\r\n                            </button>\r\n                            )}\r\n                        </div>\r\n                        <p className=\"text-lg font-semibold text-gray-800 mb-4\">{download.title}</p>\r\n                        </div>\r\n                        <a\r\n                        href={download.fileName}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"w-full mt-2 inline-flex items-center justify-center gap-2 py-2 px-4 text-sm font-medium rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                        >\r\n                        <FontAwesomeIcon icon={faDownload} />\r\n                        Download\r\n                        </a>\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <div className=\"text-center bg-white p-10 rounded-lg shadow-sm\">\r\n                    <h3 className=\"text-lg font-medium text-gray-800\">No Files Found</h3>\r\n                    <p className=\"text-gray-500 mt-1\">There are currently no files available for download.</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Downloads;"],"names":["FileInputDisplay","file","className","name","authData","useContext","UserAuthContext","useState","setFile","title","setTitle","type","setType","downloads","setDownloads","isLoadingList","setIsLoadingList","isUploading","setIsUploading","deletingId","setDeletingId","getDownloads","useCallback","Axios","data","console","error","toast","useEffect","handleFileUpload","e","preventDefault","formData","FormData","append","document","getElementById","value","response","message","handleDeleteFile","id","window","confirm","prevDownloads","filter","d","_id","role","onSubmit","htmlFor","onChange","target","disabled","placeholder","files","icon","faSpinner","faUpload","spin","size","length","map","download","onClick","faTrash","href","fileName","rel","faDownload"],"sourceRoot":""}